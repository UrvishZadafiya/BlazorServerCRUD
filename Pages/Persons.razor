@page "/persons"
@using Services
@inject IPersonService personService
@inject IJSRuntime jsRuntime

<PageTitle></PageTitle>
<h3>Persons</h3>
<a href="/person/add" class="btn btn-outline-dark">Add more</a>
<div class="row">
    <div class="col-sm-6">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Action</th>
                </tr>
            </thead>
            @foreach (var person in persons)
            {
                <tbody>
                    <tr>
                        <td>@person.Name</td>
                        <td>@person.Email</td>
                        <td>
                            <a href="/person/edit/@person.Id" class="btn btn-success">Edit</a>
                            <a class="btn btn-danger" @onclick="async ()=> await Delete(person)">Delete </a>
                        </td>
                    </tr>
                </tbody>
            }
        </table>
    </div>
</div>

@code {
    private List<Models.Person> persons = new();

    private async Task Delete(Models.Person person)
    {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete?");
        if (confirmed)
        {
            if (personService.Delete(person.Id))
                persons.Remove(person);
        }
    }

    protected override void OnInitialized()
    {
        persons = personService.GetAll();
        base.OnInitialized();
    }
}
